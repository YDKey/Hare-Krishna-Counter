<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Hare Krishna Mahamantra Counter</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    html, body {
      height: 100%;
      margin: 0;
      padding: 0;
    }

    body {
      background-image: url('https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/Lord_Krishna_with_flute.jpg/640px-Lord_Krishna_with_flute.jpg');
      background-size: cover;
      background-position: center;
      background-attachment: fixed;
    }

    .bg-overlay {
      background-color: rgba(255, 255, 255, 0.9);
      backdrop-filter: blur(4px);
    }

    /* Vibration Animation for Counter */
    @keyframes vibrate {
      0% { transform: translateX(0); }
      25% { transform: translateX(-2px); }
      50% { transform: translateX(2px); }
      75% { transform: translateX(-2px); }
      100% { transform: translateX(0); }
    }

    .vibrate-effect {
      animation: vibrate 0.15s ease-in-out;
    }
  </style>
</head>
<body class="h-full w-full flex items-center justify-center p-4 sm:p-8 overflow-auto">

  <div class="w-full max-w-3xl bg-overlay p-6 sm:p-10 rounded-xl shadow-xl text-center space-y-6">
    
    <h1 class="text-3xl sm:text-4xl font-bold text-orange-700">Hare Krishna Mahamantra Counter</h1>
    
    <div class="italic text-purple-700 bg-purple-100 p-4 rounded-lg border-l-4 border-purple-500">
      Jaya Sri-Krishna-Chaitanya Prabhu Nityananda<br>
      Sri-Adwaita Gadadhara Shrivasadi-Gaura-Bhakta-Vrinda
    </div>
    
    <div class="bg-purple-50 border border-purple-200 p-6 rounded-lg text-2xl text-purple-900 leading-relaxed">
      Hare Krishna Hare Krishna<br>
      Krishna Krishna Hare Hare<br>
      Hare Rama Hare Rama<br>
      Rama Rama Hare Hare
    </div>
    
    <div class="flex flex-col sm:flex-row justify-center items-center gap-6">
      <div class="bg-yellow-50 p-4 w-40 rounded-lg border border-yellow-200">
        <div id="mantra-counter" class="text-4xl font-bold text-orange-700">0</div>
        <div class="text-sm uppercase text-gray-600 mt-1 tracking-wide">Mantras</div>
      </div>
      <div class="bg-yellow-50 p-4 w-40 rounded-lg border border-yellow-200">
        <div id="round-counter" class="text-4xl font-bold text-orange-700">0</div>
        <div class="text-sm uppercase text-gray-600 mt-1 tracking-wide">Rounds</div>
      </div>
    </div>

    <button id="count-btn" class="bg-purple-700 text-white text-lg px-6 py-3 rounded-full shadow-md hover:bg-purple-800 transition">
      Count Mantra (Space)
    </button>

    <div class="flex flex-col sm:flex-row gap-4 justify-center mt-4">
      <button id="reset-mantra-btn" class="bg-orange-500 text-white px-4 py-2 rounded-full hover:bg-orange-600 transition">Reset Mantra</button>
      <button id="reset-all-btn" class="bg-red-600 text-white px-4 py-2 rounded-full hover:bg-red-700 transition">Reset All</button>
    </div>

    <div class="bg-gray-100 p-4 rounded-lg text-left text-sm text-gray-700">
      <p><strong>Instructions:</strong></p>
      <ul class="list-disc list-inside space-y-1">
        <li>Click the button or press the space bar to count one recitation</li>
        <li>Every 108 mantras completes one round</li>
        <li>Use "Reset Mantra" to reset mantra only</li>
        <li>Use "Reset All" to reset both (confirmation will appear)</li>
      </ul>
    </div>
  </div>

  <div id="confirm-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-white p-6 rounded-lg max-w-sm text-center">
      <h2 class="text-xl font-semibold">Reset All Counters?</h2>
      <p class="mt-2 text-gray-600">Are you sure you want to reset both mantra and round counters to zero?</p>
      <div class="mt-4 flex justify-center gap-3">
        <button id="cancel-reset" class="bg-gray-400 text-white px-4 py-2 rounded hover:bg-gray-500">Cancel</button>
        <button id="confirm-reset" class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700">Reset All</button>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const mantraCounter = document.getElementById('mantra-counter');
      const roundCounter = document.getElementById('round-counter');
      const countBtn = document.getElementById('count-btn');
      const resetMantraBtn = document.getElementById('reset-mantra-btn');
      const resetAllBtn = document.getElementById('reset-all-btn');
      const confirmModal = document.getElementById('confirm-modal');
      const confirmResetBtn = document.getElementById('confirm-reset');
      const cancelResetBtn = document.getElementById('cancel-reset');

      let mantras = parseInt(localStorage.getItem('mantras')) || 0;
      let rounds = parseInt(localStorage.getItem('rounds')) || 0;
      updateCounters();

      function updateCounters() {
        mantraCounter.textContent = mantras;
        roundCounter.textContent = rounds;
        localStorage.setItem('mantras', mantras);
        localStorage.setItem('rounds', rounds);
      }

      function countMantra() {
        mantras++;
        if (mantras >= 108) {
          rounds++;
          mantras = 0;
        }

        mantraCounter.classList.add('vibrate-effect');
        mantraCounter.addEventListener('animationend', () => {
          mantraCounter.classList.remove('vibrate-effect');
        }, { once: true });

        if (navigator.vibrate) {
          navigator.vibrate(100);
        }

        updateCounters();
      }

      countBtn.addEventListener('click', countMantra);

      resetMantraBtn.addEventListener('click', () => {
        mantras = 0;
        updateCounters();
      });

      resetAllBtn.addEventListener('click', () => {
        confirmModal.classList.remove('hidden');
        confirmModal.classList.add('flex');
      });

      confirmResetBtn.addEventListener('click', () => {
        mantras = 0;
        rounds = 0;
        updateCounters();
        confirmModal.classList.add('hidden');
        confirmModal.classList.remove('flex');
      });

      cancelResetBtn.addEventListener('click', () => {
        confirmModal.classList.add('hidden');
        confirmModal.classList.remove('flex');
      });

      window.addEventListener('click', (e) => {
        if (e.target === confirmModal) {
          confirmModal.classList.add('hidden');
          confirmModal.classList.remove('flex');
        }
      });

      document.addEventListener('keydown', (e) => {
        if (e.code === 'Space') {
          e.preventDefault();
          countMantra();
        }
      });
    });
  </script>
</body>
</html>
